package com.writing.management.WPM;

import java.io.IOException;
import com.writing.management.WPM.Drafting.event.subcriber.FictionToDraftSubscriber;
import com.writing.management.WPM.Drafting.event.subcriber.PoetryToDraftSubscriber;
import com.writing.management.WPM.Review.ReviewWatcherProvider;
import com.writing.management.WPM.Review.event.subcriber.NewFictionReviewSubscriber;
import com.writing.management.WPM.Review.event.subcriber.NewPoetryReviewSubscriber;
import com.writing.management.WPM.submission.event.subscriber.FictionDraftToReadyForSubmissionSubscriber;
import com.writing.management.WPM.submission.event.subscriber.FictionNewSubmissionSubscriber;
import com.writing.management.WPM.submission.event.subscriber.FictionSubmissionRejectedSubscriber;
import com.writing.management.WPM.submission.event.subscriber.FictionSubmissionToPublishedSubscriber;
import com.writing.management.WPM.submission.event.subscriber.PoetryDraftToReadyForSubmissionSubscriber;
import com.writing.management.WPM.submission.event.subscriber.PoetryNewSubmissionSubscriber;
import com.writing.management.WPM.submission.event.subscriber.PoetrySubmissionRejectedSubscriber;
import com.writing.management.WPM.submission.event.subscriber.PoetryToSubmissionToPublishedSubscriber;
import com.writing.management.tool.WPMTools.DirectoryLocations;

import bbejeck.nio.files.directory.event.DirectoryEventWatcher;

import com.google.common.eventbus.EventBus;
/**
 * Writing Process Manager -- Contains and executes functionality requests
 *
 */
public class WPM 
{
    public static EventBus init() {
    	//SET UP EVENT BUS FOR PROCESSING EVENTS
		EventBus WritingProcessor = new EventBus();
		
		//EVENT HANDLER FOR MOVING PEICE FROM REVIEW TO DRAFT
		FictionToDraftSubscriber fictionToDraftSubscriber = new FictionToDraftSubscriber();
		PoetryToDraftSubscriber poetryToDraftSubscriber = new PoetryToDraftSubscriber();
		WritingProcessor.register(fictionToDraftSubscriber);
		WritingProcessor.register(poetryToDraftSubscriber);
		
		//EVENT HANDLER FOR MOVING PEICE FROM DRAFT TO READY FOR SUBMISSION
		FictionDraftToReadyForSubmissionSubscriber fictionDraftToReadyForSubmissionSubscriber = new FictionDraftToReadyForSubmissionSubscriber();
		PoetryDraftToReadyForSubmissionSubscriber poetryDraftToReadyForSubmissionSubscriber = new PoetryDraftToReadyForSubmissionSubscriber();
		WritingProcessor.register(fictionDraftToReadyForSubmissionSubscriber);
		WritingProcessor.register(poetryDraftToReadyForSubmissionSubscriber);
		
		//EVENT HANDLER FOR SUBMISSIONS
		//NEW SUBMISSION EVENT
		FictionNewSubmissionSubscriber fictionNewSubmissionSubscriber = new FictionNewSubmissionSubscriber();
		PoetryNewSubmissionSubscriber poetryNewSubmissionSubscriber = new PoetryNewSubmissionSubscriber();
		WritingProcessor.register(fictionNewSubmissionSubscriber);
		WritingProcessor.register(poetryNewSubmissionSubscriber);
		
		//SUCCESSFUL SUBMISSIONS TO PUBLISHED || REJECTED SUBMISSIONS TO REJECTED SUBMISSIONS
		FictionSubmissionToPublishedSubscriber fictionSubmissionToPublishedSubscriber = new FictionSubmissionToPublishedSubscriber();
		PoetryToSubmissionToPublishedSubscriber poetrySubmissionToPublishedSubscriber = new PoetryToSubmissionToPublishedSubscriber();
		
		FictionSubmissionRejectedSubscriber fictionRejectedSubmissionSubscriber = new FictionSubmissionRejectedSubscriber();
		PoetrySubmissionRejectedSubscriber poetrySubmissionRejectedSubscriber = new PoetrySubmissionRejectedSubscriber();
		
		WritingProcessor.register(fictionSubmissionToPublishedSubscriber);
		WritingProcessor.register(poetrySubmissionToPublishedSubscriber);
		WritingProcessor.register(fictionRejectedSubmissionSubscriber);
		WritingProcessor.register(poetrySubmissionRejectedSubscriber);
		
		return WritingProcessor;
	}

	public static void startWatcher() {
		EventBus evBus = new EventBus();
		String startPath = DirectoryLocations.getDocumentsForReviewFolder();
		System.out.println("Starting File Watcher...");
		NewFictionReviewSubscriber fictionReviewSubscriber = new NewFictionReviewSubscriber();
		NewPoetryReviewSubscriber poetryReviewSubscriber = new NewPoetryReviewSubscriber();
		evBus.register(poetryReviewSubscriber);
		evBus.register(fictionReviewSubscriber);
		
		ReviewWatcherProvider dewp = new ReviewWatcherProvider(evBus, startPath);
		DirectoryEventWatcher watch = dewp.get();	
		
		try {
			watch.start();
		} catch (IOException e) {
			e.printStackTrace();
		}
    }
}